#!/usr/bin/env bash

export WD=$PWD

for x in bin out; do
    if [ ! -d "$WD/$x" ]; then
        mkdir "$WD/$x"
    fi
done

export SHARED_FLAGS=(
    --color "always"
    -C "opt-level=0"
    -C "overflow-checks=yes"
    -lglfw
    -W "absolute-paths-not-starting-with-crate"
    -W "anonymous-parameters"
    -W "deprecated-in-future"
    -W "elided-lifetimes-in-paths"
    -W "explicit-outlives-requirements"
    -W "future-incompatible"
    -W "indirect-structural-match"
    -W "keyword-idents"
    -W "let-underscore"
    -W "macro-use-extern-crate"
    -W "meta-variable-misuse"
    -W "non-ascii-idents"
    -W "nonstandard-style"
    -W "rust-2018-compatibility"
    -W "rust-2018-idioms"
    -W "rust-2021-compatibility"
    -W "rust-2024-compatibility"
    -W "trivial-casts"
    -W "trivial-numeric-casts"
    -W "unreachable-pub"
    -W "unused"
)
export MAIN_FLAGS=(
    -C "panic=unwind"
)
export CLIPPY_FLAGS=(
    -W "clippy::all"
    -W "clippy::complexity"
    -W "clippy::correctness"
    -W "clippy::nursery"
    -W "clippy::pedantic"
    -W "clippy::perf"
    -W "clippy::suspicious"
    -A "dead_code"
    -D "warnings"
)
export RUST_BACKTRACE=1

runr () {
    handle=$(basename "${1%%.*}")
    args=("$@")
    rustfmt --color always "$1" || return
    clippy-driver "${SHARED_FLAGS[@]}" "${MAIN_FLAGS[@]}" "${CLIPPY_FLAGS[@]}" \
        -o "$WD/bin/${handle}" "$1" || return
    "$WD/bin/${handle}" "${args[@]:1}"
}

testr () {
    handle=$(basename "${1%%.*}")
    rustfmt --color always "$1" || return
    clippy-driver "${SHARED_FLAGS[@]}" "${CLIPPY_FLAGS[@]}" \
        -o "$WD/bin/${handle}_test" --test "$1" || return
    "$WD/bin/${handle}_test"
}

export -f runr
export -f testr
